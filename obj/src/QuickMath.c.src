	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_absf_s
_absf_s:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	bc, -1
	ld	a, 127
	call	__land
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_negf_s
_negf_s:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	bc, 0
	ld	a, -128
	call	__lxor
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_cosf
_cosf:
	ld	hl, -4
	call	__frameset
	ld	iy, (ix + 6)
	ld	d, (ix + 9)
	ld	bc, -3600421
	ld	a, -65
	lea	hl, iy
	ld	e, d
	call	__fcmp
	jq	p, BB2_2
	ld	a, -64
	ld	bc, 4788184
	jq	BB2_7
BB2_2:
	push	bc
	pop	hl
	ld	e, 63
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jq	p, BB2_3
	ld	a, 0
	jq	BB2_5
BB2_3:
	ld	a, 1
BB2_5:
	ld	bc, 4788184
	bit	0, a
	jq	nz, BB2_8
	ld	a, 64
BB2_7:
	lea	hl, iy
	ld	e, d
	call	__fsub
	push	bc
	pop	iy
	ld	d, a
BB2_8:
	ld	e, 63
	lea	bc, iy
	ld	a, d
	ld	hl, -8272845
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	or	a, a
	sbc	hl, hl
	ld	e, 63
	call	__fmul
	push	bc
	pop	hl
	ld	(ix - 3), a
	ld	bc, -8388608
	ld	a, e
	ld	e, (ix - 3)
	call	__fsub
	ld	(ix - 3), bc
	ld	(ix - 4), a
	lea	bc, iy
	ld	a, d
	lea	hl, iy
	ld	e, d
	call	__fmul
	ld	hl, -4194304
	ld	e, 65
	call	__fdiv
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_sinf
_sinf:
	ld	hl, -8
	call	__frameset
	ld	iy, (ix + 6)
	ld	d, (ix + 9)
	ld	bc, -3600421
	ld	a, -65
	lea	hl, iy
	ld	e, d
	call	__fcmp
	jq	p, BB3_2
	ld	a, -64
	ld	bc, 4788184
	jq	BB3_7
BB3_2:
	push	bc
	pop	hl
	ld	e, 63
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jq	p, BB3_3
	ld	a, 0
	jq	BB3_5
BB3_3:
	ld	a, 1
BB3_5:
	ld	bc, 4788184
	bit	0, a
	jq	nz, BB3_8
	ld	a, 64
BB3_7:
	lea	hl, iy
	ld	e, d
	call	__fsub
	push	bc
	pop	iy
	ld	d, a
BB3_8:
	ld	e, 63
	lea	bc, iy
	ld	a, d
	ld	hl, -8272845
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	lea	hl, iy
	ld	e, d
	call	__fmul
	push	bc
	pop	hl
	ld	(ix - 3), hl
	ld	e, a
	ld	(ix - 4), e
	lea	bc, iy
	ld	a, d
	call	__fmul
	ld	(ix - 8), bc
	ld	(ix - 5), a
	ld	hl, -4194304
	ld	e, 64
	call	__fdiv
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy
	ld	a, d
	call	__fsub
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	ld	hl, (ix - 8)
	ld	e, (ix - 5)
	call	__fmul
	ld	hl, -1048576
	ld	e, 66
	call	__fdiv
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy
	ld	a, d
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_cosf_s
_cosf_s:
	ld	hl, -1
	call	__frameset
	ld	iy, (ix + 6)
	ld	d, (ix + 9)
	ld	hl, 4788184
	ld	e, 64
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jq	p, BB4_8
	ld	a, d
	ld	d, 1
BB4_2:
	ld	hl, 4788184
	ld	e, 64
	lea	bc, iy
	ld	(ix - 1), a
	call	__fcmp
	ld	a, d
	jq	p, BB4_4
	ld	a, 0
BB4_4:
	bit	0, a
	ld	e, -64
	jq	nz, BB4_5
	lea	bc, iy
	ld	a, (ix - 1)
	ld	hl, -3600421
	call	__fadd
	push	bc
	pop	iy
	jq	BB4_2
BB4_8:
	lea	hl, iy
	ld	e, d
	ld	bc, 4788184
	ld	a, -64
	call	__fcmp
	jq	p, BB4_9
	ld	a, 0
	jq	BB4_11
BB4_5:
	ld	d, (ix - 1)
	jq	BB4_6
BB4_9:
	ld	a, 1
BB4_11:
	bit	0, a
	ld	bc, 4788184
	jq	nz, BB4_6
BB4_12:
	lea	hl, iy
	ld	e, d
	ld	a, -64
	call	__fcmp
	ld	a, 1
	jq	p, BB4_14
	ld	a, 0
BB4_14:
	bit	0, a
	jq	nz, BB4_6
	lea	bc, iy
	ld	a, d
	ld	hl, -3600421
	ld	e, 64
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	ld	bc, 4788184
	jq	BB4_12
BB4_6:
	ld	(ix + 6), iy
	ld	(ix + 9), d
	inc	sp
	pop	ix
	jp	_cosf
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_sinf_s
_sinf_s:
	ld	hl, -1
	call	__frameset
	ld	iy, (ix + 6)
	ld	d, (ix + 9)
	ld	hl, 4788184
	ld	e, 64
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jq	p, BB5_8
	ld	a, d
	ld	d, 1
BB5_2:
	ld	hl, 4788184
	ld	e, 64
	lea	bc, iy
	ld	(ix - 1), a
	call	__fcmp
	ld	a, d
	jq	p, BB5_4
	ld	a, 0
BB5_4:
	bit	0, a
	ld	e, -64
	jq	nz, BB5_5
	lea	bc, iy
	ld	a, (ix - 1)
	ld	hl, -3600421
	call	__fadd
	push	bc
	pop	iy
	jq	BB5_2
BB5_8:
	lea	hl, iy
	ld	e, d
	ld	bc, 4788184
	ld	a, -64
	call	__fcmp
	jq	p, BB5_9
	ld	a, 0
	jq	BB5_11
BB5_5:
	ld	d, (ix - 1)
	jq	BB5_6
BB5_9:
	ld	a, 1
BB5_11:
	bit	0, a
	ld	bc, 4788184
	jq	nz, BB5_6
BB5_12:
	lea	hl, iy
	ld	e, d
	ld	a, -64
	call	__fcmp
	ld	a, 1
	jq	p, BB5_14
	ld	a, 0
BB5_14:
	bit	0, a
	jq	nz, BB5_6
	lea	bc, iy
	ld	a, d
	ld	hl, -3600421
	ld	e, 64
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	ld	bc, 4788184
	jq	BB5_12
BB5_6:
	ld	(ix + 6), iy
	ld	(ix + 9), d
	inc	sp
	pop	ix
	jp	_sinf
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_sinf_sc
_sinf_sc:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, 4788184
	ld	e, 64
	ld	bc, (iy)
	ld	d, (iy + 3)
	ld	a, d
	call	__fcmp
	jq	p, BB6_7
	ld	a, d
	ld	d, 1
BB6_2:
	ld	hl, 4788184
	ld	e, 64
	ld	(ix - 3), bc
	ld	iyh, a
	call	__fcmp
	ld	a, d
	jq	p, BB6_4
	ld	a, 0
BB6_4:
	bit	0, a
	jq	nz, BB6_5
	ld	bc, (ix - 3)
	ld	a, iyh
	ld	hl, -3600421
	ld	e, -64
	call	__fadd
	ld	iy, (ix + 6)
	ld	hl, (ix + 6)
	ld	(hl), bc
	ld	iy, (ix + 6)
	ld	(iy + 3), a
	jq	BB6_2
BB6_7:
	push	bc
	pop	iy
	push	bc
	pop	hl
	ld	e, d
	ld	bc, 4788184
	ld	a, -64
	call	__fcmp
	jq	p, BB6_8
	ld	a, 0
	jq	BB6_10
BB6_5:
	ex	de, hl
	ld	e, iyh
	ex	de, hl
	jq	BB6_17
BB6_8:
	ld	a, 1
BB6_10:
	bit	0, a
	lea	bc, iy
	jq	nz, BB6_11
	ld	iyl, 1
BB6_13:
	ld	(ix - 3), bc
	push	bc
	pop	hl
	ld	e, d
	ld	bc, 4788184
	ld	a, -64
	call	__fcmp
	ld	a, iyl
	jq	p, BB6_15
	ld	a, 0
BB6_15:
	bit	0, a
	jq	nz, BB6_16
	ld	bc, (ix - 3)
	ld	a, d
	ld	hl, -3600421
	ld	e, 64
	call	__fadd
	ld	d, a
	ld	a, iyl
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), d
	ld	iyl, a
	jq	BB6_13
BB6_11:
	ld	l, d
	jq	BB6_18
BB6_16:
	ld	l, d
BB6_17:
	ld	bc, (ix - 3)
BB6_18:
	push	hl
	push	bc
	call	_sinf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_tanf
_tanf:
	ld	hl, -8
	call	__frameset
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	ld	hl, 2292099
	ld	d, 63
	ld	iy, -8388608
	ld	e, d
	call	__fmul
	ld	(ix - 3), bc
	ld	(ix - 4), a
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy
	ld	a, d
	call	__fsub
	push	bc
	pop	iy
	ld	d, a
	ld	hl, -6731932
	ld	e, 60
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	bc, -6179543
	ld	a, 62
	call	__fsub
	ld	(ix - 7), bc
	ld	(ix - 8), a
	ld	bc, -6093000
	ld	a, 63
	lea	hl, iy
	ld	e, d
	call	__fdiv
	ld	hl, (ix - 7)
	ld	e, (ix - 8)
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_tanf_s
_tanf_s:
	ld	hl, -1
	call	__frameset
	ld	iy, (ix + 6)
	ld	d, (ix + 9)
	ld	hl, -3600421
	ld	e, 63
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jq	p, BB8_8
	ld	a, d
	ld	d, 1
BB8_2:
	ld	hl, -3600421
	ld	e, 63
	lea	bc, iy
	ld	(ix - 1), a
	call	__fcmp
	ld	a, d
	jq	p, BB8_4
	ld	a, 0
BB8_4:
	bit	0, a
	jq	nz, BB8_5
	lea	bc, iy
	ld	a, (ix - 1)
	ld	hl, 4788184
	ld	e, -64
	call	__fadd
	push	bc
	pop	iy
	jq	BB8_2
BB8_8:
	ld	a, -65
	lea	hl, iy
	ld	e, d
	ld	bc, -3600421
	call	__fcmp
	jq	p, BB8_9
	ld	a, 0
	jq	BB8_11
BB8_5:
	ld	d, (ix - 1)
	jq	BB8_6
BB8_9:
	ld	a, 1
BB8_11:
	bit	0, a
	ld	bc, -3600421
	jq	nz, BB8_6
BB8_12:
	lea	hl, iy
	ld	e, d
	ld	a, -65
	call	__fcmp
	ld	a, 1
	jq	p, BB8_14
	ld	a, 0
BB8_14:
	bit	0, a
	jq	nz, BB8_6
	lea	bc, iy
	ld	a, d
	ld	hl, 4788184
	ld	e, 64
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	ld	bc, -3600421
	jq	BB8_12
BB8_6:
	ld	(ix + 6), iy
	ld	(ix + 9), d
	inc	sp
	pop	ix
	jp	_tanf
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_cotanf_s
_cotanf_s:
	ld	hl, -10
	call	__frameset
	ld	bc, (ix + 6)
	ld	d, (ix + 9)
	ld	hl, 4788184
	ld	e, 64
	ld	a, d
	call	__fcmp
	jq	p, BB9_7
	ld	iyl, 1
	ld	iyh, 0
BB9_2:
	ld	e, 64
	ld	(ix - 3), bc
	ld	a, d
	call	__fcmp
	ld	a, iyl
	jq	p, BB9_4
	ld	a, iyh
BB9_4:
	bit	0, a
	jq	nz, BB9_5
	ld	bc, (ix - 3)
	ld	a, d
	ld	hl, -3600421
	ld	e, -64
	call	__fadd
	ld	d, a
	ld	hl, 4788184
	jq	BB9_2
BB9_7:
	push	hl
	pop	iy
	push	bc
	pop	hl
	ld	e, d
	lea	bc, iy
	ld	a, -64
	call	__fcmp
	jq	p, BB9_8
	ld	a, 0
	jq	BB9_10
BB9_8:
	ld	a, 1
BB9_10:
	bit	0, a
	ld	hl, (ix + 6)
	jq	nz, BB9_11
	ld	iyl, 1
	ld	iyh, 0
BB9_14:
	ld	(ix - 3), hl
	ld	e, d
	ld	bc, 4788184
	ld	a, -64
	call	__fcmp
	ld	a, iyl
	jq	p, BB9_16
	ld	a, iyh
BB9_16:
	bit	0, a
	jq	nz, BB9_5
	ld	bc, (ix - 3)
	ld	a, d
	ld	hl, -3600421
	ld	e, 64
	call	__fadd
	push	bc
	pop	hl
	ld	d, a
	jq	BB9_14
BB9_5:
	ld	e, d
	ld	hl, (ix - 3)
	jq	BB9_12
BB9_11:
	ld	e, d
BB9_12:
	ld	(ix - 10), de
	ld	(ix - 3), hl
	push	de
	push	hl
	call	_cosf
	ld	(ix - 6), hl
	ld	(ix - 7), e
	pop	hl
	pop	hl
	ld	hl, (ix - 10)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_sinf
	pop	bc
	pop	bc
	ld	bc, (ix - 6)
	ld	a, (ix - 7)
	call	__fdiv
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_arcsinf
_arcsinf:
	call	__frameset0
	ld	bc, -8388608
	ld	a, 63
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	call	__fsub
	ld	l, a
	push	hl
	push	bc
	call	_sqrt_f
	push	hl
	pop	iy
	ld	d, e
	pop	hl
	pop	hl
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	ld	hl, 5846148
	ld	e, 62
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	bc, -3600988
	ld	a, 63
	call	__fsub
	lea	hl, iy
	ld	e, d
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	bc, -3600421
	ld	a, 63
	call	__fsub
	push	bc
	pop	hl
	ld	e, a
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_sqrt_f
_sqrt_f:
	call	__frameset0
	ld	de, (ix + 6)
	ld	l, (ix + 9)
	push	hl
	push	de
	call	_isqrt_f
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_arcsinf_s
_arcsinf_s:
	call	__frameset0
	ld	d, (ix + 9)
	ld	iy, -8388608
	ld	e, 63
	lea	hl, iy
	ld	bc, (ix + 6)
	ld	a, d
	call	__fcmp
	jq	p, BB12_2
	ld	hl, 63
	push	hl
	push	iy
	jq	BB12_8
BB12_2:
	ld	hl, (ix + 6)
	ld	e, d
	ld	bc, 0
	xor	a, a
	call	__fcmp
	jq	p, BB12_7
	ld	a, -65
	ld	hl, (ix + 6)
	ld	e, d
	lea	bc, iy
	call	__fcmp
	jq	p, BB12_6
	ld	hl, 63
	push	hl
	push	iy
	jq	BB12_5
BB12_7:
	ld	l, d
	push	hl
	ld	hl, (ix + 6)
	push	hl
BB12_8:
	call	_arcsinf
	pop	bc
	pop	bc
	jq	BB12_9
BB12_6:
	ld	hl, (ix + 6)
	ld	e, d
	ld	bc, 0
	ld	a, -128
	call	__lxor
	push	de
	push	hl
BB12_5:
	call	_arcsinf
	pop	bc
	pop	bc
	ld	bc, 0
	ld	a, -128
	call	__lxor
BB12_9:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_arctanf_s
_arctanf_s:
	ld	hl, -4
	call	__frameset
	ld	iy, (ix + 6)
	ld	d, (ix + 9)
	ld	hl, 4788187
	ld	e, 63
	lea	bc, iy
	ld	a, d
	call	__fmul
	ld	(ix - 3), bc
	ld	(ix - 4), a
	lea	bc, iy
	ld	a, d
	ld	hl, -7214203
	dec	e
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	bc, -1
	ld	a, 127
	call	__land
	ld	bc, -8388608
	ld	a, 63
	call	__fsub
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy
	ld	a, d
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_arccotf_s
_arccotf_s:
	ld	hl, -4
	call	__frameset
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	iy, -8388608
	ld	d, 63
	lea	bc, iy
	ld	a, d
	call	__fdiv
	push	bc
	pop	hl
	ld	(ix - 3), hl
	ld	e, a
	ld	(ix - 4), e
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_isqrt_f
	pop	bc
	pop	bc
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	call	__fmul
	ld	(ix + 6), bc
	ld	(ix + 9), a
	ld	sp, ix
	pop	ix
	jp	_arcsinf_s
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_isqrt_f
_isqrt_f:
	ld	hl, -4
	call	__frameset
	ld	iy, (ix + 6)
	ld	d, (ix + 9)
	or	a, a
	sbc	hl, hl
	ld	e, 63
	lea	bc, iy
	ld	a, d
	call	__fmul
	ld	(ix - 3), bc
	ld	(ix - 4), a
	inc	l
	lea	bc, iy
	ld	a, d
	call	__lshrs
	ld	hl, 3627487
	ld	e, 95
	call	__lsub
	push	hl
	pop	iy
	ld	d, e
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	call	__fmul
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	bc, -4194304
	ld	a, 63
	call	__fsub
	lea	hl, iy
	ld	e, d
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_arccosf_s
_arccosf_s:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	ld	e, a
	push	de
	push	hl
	call	_arcsinf_s
	pop	bc
	pop	bc
	ld	bc, 0
	ld	a, -128
	call	__lxor
	push	hl
	pop	bc
	ld	a, e
	ld	hl, -3600421
	ld	e, 63
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_flmod
_flmod:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	iy, (ix + 12)
	ld	d, (ix + 15)
	ld	bc, -1
	ld	a, 127
	call	__land
	push	hl
	pop	bc
	ld	a, e
BB17_1:
	lea	hl, iy
	ld	e, d
	call	__fcmp
	jq	p, BB17_3
	lea	hl, iy
	ld	e, d
	call	__fsub
	jq	BB17_1
BB17_3:
	push	bc
	pop	hl
	ld	e, a
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_swap
_swap:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	iy, (ix + 9)
	ld	de, (hl)
	ld	bc, (iy)
	ld	(hl), bc
	ld	(iy), de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_partition
_partition:
	ld	hl, -15
	call	__frameset
	ld	iy, (ix + 9)
	ld	de, (ix + 12)
	ld	bc, 3
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 6)
	add	hl, bc
	lea	bc, iy
	ld	(ix - 9), hl
	ld	hl, (hl)
	ld	(ix - 12), hl
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB19_2
	push	bc
	pop	de
BB19_2:
	push	bc
	pop	hl
	dec	hl
	ld	(ix - 3), hl
	ex	de, hl
	or	a, a
	sbc	hl, bc
	ld	(ix - 6), hl
	push	bc
	pop	hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	hl, (ix - 6)
BB19_3:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB19_8
	ld	(ix - 6), hl
	ld	hl, (iy)
	push	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix + 15)
	ld	(ix - 15), iy
	call	__indcallhl
	pop	de
	pop	de
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB19_5
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 6)
	add	hl, de
	ld	de, (hl)
	ld	iy, (ix - 15)
	ld	bc, (iy)
	ld	(hl), bc
	ld	(iy), de
	jq	BB19_7
BB19_5:
	ld	iy, (ix - 15)
BB19_7:
	ld	hl, (ix - 6)
	dec	hl
	lea	iy, iy + 3
	jq	BB19_3
BB19_8:
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 6)
	add	hl, de
	ld	(ix - 12), hl
	ld	de, (hl)
	ld	(ix - 6), de
	ld	hl, (ix - 9)
	push	hl
	pop	bc
	push	bc
	pop	iy
	ld	de, (iy)
	ld	hl, (ix - 12)
	ld	(hl), de
	push	bc
	pop	hl
	ld	de, (ix - 6)
	ld	(hl), de
	ld	hl, (ix - 3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_quickSort
_quickSort:
	ld	hl, -6
	call	__frameset
	ld	bc, (ix + 9)
	ld	de, (ix + 12)
BB20_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB20_3
	ld	hl, (ix + 15)
	push	hl
	push	de
	push	bc
	ld	hl, (ix + 6)
	push	hl
	ld	(ix - 3), bc
	call	_partition
	ld	(ix - 6), hl
	pop	de
	pop	de
	pop	de
	pop	de
	ex	de, hl
	dec	de
	ld	hl, (ix + 15)
	push	hl
	push	de
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_quickSort
	ld	de, (ix + 12)
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix - 6)
	inc	bc
	jq	BB20_1
BB20_3:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_toTrigBounds
_toTrigBounds:
	ld	hl, -1
	call	__frameset
	ld	iy, (ix + 6)
	ld	d, (ix + 9)
	ld	hl, 4788184
	ld	e, 64
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jq	p, BB21_8
	ld	a, d
	ld	d, 1
BB21_2:
	ld	hl, 4788184
	ld	e, 64
	lea	bc, iy
	ld	(ix - 1), a
	call	__fcmp
	ld	a, d
	jq	p, BB21_4
	ld	a, 0
BB21_4:
	bit	0, a
	ld	e, -64
	jq	nz, BB21_5
	lea	bc, iy
	ld	a, (ix - 1)
	ld	hl, -3600421
	call	__fadd
	push	bc
	pop	iy
	jq	BB21_2
BB21_8:
	lea	hl, iy
	ld	e, d
	ld	bc, 4788184
	ld	a, -64
	call	__fcmp
	jq	p, BB21_9
	ld	a, 0
	jq	BB21_11
BB21_5:
	ld	d, (ix - 1)
	jq	BB21_6
BB21_9:
	ld	a, 1
BB21_11:
	bit	0, a
	ld	bc, 4788184
	jq	nz, BB21_6
BB21_12:
	lea	hl, iy
	ld	e, d
	ld	a, -64
	call	__fcmp
	ld	a, 1
	jq	p, BB21_14
	ld	a, 0
BB21_14:
	bit	0, a
	jq	nz, BB21_6
	lea	bc, iy
	ld	a, d
	ld	hl, -3600421
	ld	e, 64
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	ld	bc, 4788184
	jq	BB21_12
BB21_6:
	lea	hl, iy
	ld	e, d
	inc	sp
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_toTrigBoundsB
_toTrigBoundsB:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	d, (ix + 9)
	ld	hl, 4788184
	ld	e, 64
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jq	p, BB22_6
	ld	a, d
	ld	d, 1
BB22_2:
	ld	hl, 4788184
	ld	e, 64
	ld	(ix - 3), iy
	lea	bc, iy
	ld	iyl, a
	call	__fcmp
	ld	a, d
	jq	p, BB22_4
	ld	a, 0
BB22_4:
	bit	0, a
	jq	nz, BB22_8
	ld	bc, (ix - 3)
	ld	a, iyl
	ld	hl, -3600421
	ld	e, -64
	call	__fadd
	push	bc
	pop	iy
	jq	BB22_2
BB22_6:
	lea	hl, iy
	ld	e, d
	ld	bc, 4788184
	ld	a, -64
	call	__fcmp
	jq	p, BB22_9
	ld	a, 0
	jq	BB22_10
BB22_8:
	ld	d, iyl
	ld	iy, (ix - 3)
	jq	BB22_15
BB22_9:
	ld	a, 1
BB22_10:
	ld	bc, 4788184
	bit	0, a
	jq	nz, BB22_15
BB22_11:
	ld	a, -64
	lea	hl, iy
	ld	e, d
	call	__fcmp
	ld	a, 1
	jq	p, BB22_13
	ld	a, 0
BB22_13:
	bit	0, a
	jq	nz, BB22_15
	lea	bc, iy
	ld	a, d
	ld	hl, -3600421
	ld	e, 64
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	ld	bc, 4788184
	jq	BB22_11
BB22_15:
	lea	hl, iy
	ld	e, d
	ld	bc, 0
	xor	a, a
	call	__fcmp
	jq	m, BB22_17
	ld	hl, -3600421
	ld	e, 63
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jq	p, BB22_26
BB22_17:
	ld	hl, -3600421
	ld	e, 63
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jq	p, BB22_19
	ld	hl, 4788184
	ld	e, 64
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jq	p, BB22_27
BB22_19:
	lea	hl, iy
	ld	e, d
	ld	bc, 0
	xor	a, a
	call	__fcmp
	ld	a, 1
	ld	l, 0
	jq	p, BB22_21
	ld	a, l
BB22_21:
	ld	(ix - 3), a
	lea	hl, iy
	ld	e, d
	ld	bc, -3600421
	ld	a, -65
	call	__fcmp
	ld	l, 1
	jq	m, BB22_23
	ld	l, 0
BB22_23:
	ld	a, (ix - 3)
	or	a, l
	bit	0, a
	ld	hl, (ix + 12)
	jq	nz, BB22_25
	ld	a, 4
	jq	BB22_29
BB22_25:
	ld	a, 3
	jq	BB22_29
BB22_26:
	ld	a, 1
	jq	BB22_28
BB22_27:
	ld	a, 2
BB22_28:
	ld	hl, (ix + 12)
BB22_29:
	ld	(hl), a
	lea	hl, iy
	ld	e, d
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project a139def90d26173f771eb1eca797633d1fbb2797)"
	extern	__Unwind_SjLj_Register
	extern	__fadd
	extern	__setflag
	extern	__lshrs
	extern	__fsub
	extern	__frameset
	extern	__indcallhl
	extern	__lsub
	extern	__fmul
	extern	__Unwind_SjLj_Unregister
	extern	__fdiv
	extern	__imulu
	extern	__land
	extern	__lxor
	extern	__fcmp
	extern	__frameset0
